name: win64-compile

on:
  push:
    tags:
    - '*'

defaults:
  run:
    shell: cmd

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .\pow-miner-gpu-wingui\pow-miner-gpu-wingui.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      if: ${{ false }}
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      if: ${{ false }}
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      if: ${{ false }}
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Delete some sh**
      run: FOR %%a IN (".\pow-miner-gpu-wingui\x64\Release\*") DO IF /i NOT "%%~nxa"=="pow-miner-gpu-wingui.exe" DEL "%%a"
    
    - name: Goto dir
      run: cd pow-miner-gpu-wingui\x64\Release\    
    
    - name: Compress
      uses: papeloto/action-zip@v1
      with:
          files: pow-miner-gpu-wingui.exe config miners tools
          recursive: false
          dest: artifacts_dir\pow-miner-gpu-wingui-x86-64.zip
            
    - name: Packing binary files to the GITHUB Release Tag
      uses: ncipollo/release-action@v1
      with:
          allowUpdates: true
          artifacts: artifacts_dir\pow-miner-gpu-wingui*
          token: ${{ secrets.GITHUB_TOKEN }}
